# Generated by Django 3.0.4 on 2021-04-22 15:02

from django.db import migrations

def brief(content):
    truncated = False
    if content is not None:
        content = content.strip()
        if content.count('\n') >= 2:
            if content.count('\n') >= 3:
                truncated = True
            content = "\n".join(content.split('\n')[:3])

        if len(content) > 250:
            truncated = True
            content = content[:250]
        if truncated:
            content = content+"..."
        return content
    return ""

def noop(apps, schema_editor):
    pass

def create_activities(apps, schema_editor):
    Activity = apps.get_model('corm', 'Activity')
    Conversation = apps.get_model('corm', 'Conversation')
    Contribution = apps.get_model('corm', 'Contribution')
    Event = apps.get_model('corm', 'Event')
    EventAttendee = apps.get_model('corm', 'EventAttendee')

    activities = []
    print("Creating Activities for Event Attendance")
    for attend in EventAttendee.objects.all():
        activities.append(Activity(event_attendance_id=attend.id, channel=attend.event.channel, member=attend.member, icon_name="fas fa-calendar-alt", short_description='Attended Event', long_description=attend.event.title, timestamp=attend.timestamp, location=attend.event.location))
        if len(activities) >= 100:
            Activity.objects.bulk_create(activities)
            activities.clear()
            print(".", end="")
        Activity.objects.bulk_create(activities)
        activities.clear()

    print("Creating Activities for Contributions")
    for contrib in Contribution.objects.select_related('conversation').all():
        try:
            activities.append(Activity(contribution_id=contrib.id, conversation_id=contrib.conversation.id, channel=contrib.channel, member=contrib.author, icon_name="fas fa-shield-alt", short_description=contrib.contribution_type.name, long_description=contrib.title, timestamp=contrib.timestamp, location=contrib.location))
        except Conversation.DoesNotExist:
            activities.append(Activity(contribution_id=contrib.id, channel=contrib.channel, member=contrib.author, icon_name="fas fa-shield-alt", short_description=contrib.contribution_type.name, long_description=contrib.title, timestamp=contrib.timestamp, location=contrib.location))
        if len(activities) >= 100:
            Activity.objects.bulk_create(activities)
            activities.clear()
            print(".", end="")
        Activity.objects.bulk_create(activities)
        activities.clear()

    print("Creating Activities for Conversations")
    for convo in Conversation.objects.filter(contribution__isnull=True):
        activities.append(Activity(conversation_id=convo.id, channel=convo.channel, member=convo.speaker, icon_name="fas fa-comments", short_description="Commented", long_description=brief(convo.content), timestamp=convo.timestamp, location=convo.location))
        if len(activities) >= 100:
            Activity.objects.bulk_create(activities)
            activities.clear()
            print(".", end="")
        Activity.objects.bulk_create(activities)
        activities.clear()

class Migration(migrations.Migration):

    dependencies = [
        ('corm', '0123_activity'),
    ]

    operations = [
        migrations.RunPython(create_activities, noop)
    ]
