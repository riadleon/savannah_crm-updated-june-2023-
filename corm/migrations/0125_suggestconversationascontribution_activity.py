# Generated by Django 3.0.14 on 2021-05-20 14:58

from django.db import migrations, models
import django.db.models.deletion
from django.db import transaction

from corm.management.commands.make_suggestions import get_support_activity

def noop(apps, schema_editor):
    pass

def fix_support_contribs(apps, schema_editor):
    print("\nFixing support contributions")
    Activity = apps.get_model('corm', 'Activity')
    Conversation = apps.get_model('corm', 'Conversation')
    Contribution = apps.get_model('corm', 'Contribution')
    Channel = apps.get_model('corm', 'Channel')
    
    chat_sources = (
        'corm.plugins.slack',
        'corm.plugins.discord',
        'corm.plugins.rss',
        'corm.plugins.reddit'
    )
    fixed = 0
    unfixed = 0
    contribs = Contribution.objects.filter(contribution_type__name='Support', contribution_type__source__connector__in=chat_sources)
    for contrib in contribs:
        try:
            convo = contrib.conversation
        except:
            try:
                convo = Conversation.objects.get(channel_id=contrib.channel_id, timestamp=contrib.timestamp, location=contrib.location)
            except Exception as e:
                # No conversation
                print("No conversation found for contrib: http://localhost:8000/admin/corm/contribution/%s/change/" % contrib.id)
                print(e)
                unfixed += 1
                continue
        activity = get_support_activity(convo)
        if activity is not None:
            try:
                if not contrib.activity.conversation:
                    contrib.activity.delete()
                else:
                    contrib.activity.contribution_id = None
                    contrib.activity.save()
            except Exception as e:
                # No contrib.activity
                print(e)
                pass
            activity.contribution_id = contrib.id
            activity.icon_name = "fas fa-shield-alt"
            activity.short_description = contrib.contribution_type.name
            activity.save()
            fixed += 1
        else:
            print("No activity found for contrib: http://localhost:8000/admin/corm/contribution/%s/change/" % contrib.id)
            unfixed += 1
    print("Fixed: %s" % fixed)
    print("Unfixed: %s" % unfixed)

def fix_contrib_suggestions(apps, schema_editor):
    print("\nFixing contribution suggestions")
    Activity = apps.get_model('corm', 'Activity')
    Conversation = apps.get_model('corm', 'Conversation')
    Contribution = apps.get_model('corm', 'Contribution')
    Channel = apps.get_model('corm', 'Channel')
    SuggestConversationAsContribution = apps.get_model('corm', 'SuggestConversationAsContribution')

    fixed = 0
    unfixed = 0
    for suggestion in SuggestConversationAsContribution.objects.all():
        if suggestion.conversation.contribution_id is not None:
            suggestion.delete()
        else:
            activity = get_support_activity(suggestion.conversation)
            if activity is None:
                print("Can't find the supporting activity for suggestion %s" % suggestion)
                unfixed += 1
            else:
                fixed += 1
                suggestion.activity_id = activity.id
                suggestion.save()
    print("Fixed: %s" % fixed)
    print("Unfixed: %s" % unfixed)

class Migration(migrations.Migration):

    dependencies = [
        ('corm', '0124_set_activities'),
    ]

    operations = [
        migrations.AddField(
            model_name='suggestconversationascontribution',
            name='activity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contribution_suggestions', to='corm.Activity'),
        ),
        migrations.RunPython(fix_support_contribs, noop),
        migrations.RunPython(fix_contrib_suggestions, noop),
    ]
